var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "state", ()=>state
);
parcelHelpers.export(exports, "loadRecipe", ()=>loadRecipe
);
var _configJs = require("./config.js");
var _helpersJs = require("./helpers.js");
const state = {
    recipe: {
    }
};
const loadRecipe = async (id)=>{
    try {
        const response = await fetch(`${_configJs.API_URL}/${id}`); // API call
        const data = await response.json(); // Get data from response and use .json() method to turn it into a JavaScript object
        if (!response.ok) throw new Error(`${data.message} (${res.status})`); // Creation of a custom error message. IF response.ok is false ! turns it to true so that it can throw New Error message
        console.log(response, data); // Prints Response {type: "cors", url: "https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886", redirected: false, status: 200, ok: true, …} {status: "success", data: {…}}
        const { recipe  } = data.data; // Destucture of data object received back on the recipe key
        state.recipe = {
            id: recipe.title,
            publisher: recipe.publisher,
            sourceURL: recipe.source_url,
            image: recipe.image_url,
            servings: recipe.servings,
            cookingTime: recipe.cooking_time,
            ingredients: recipe.ingredients
        };
    } catch (error) {
        alert(error);
    }
    console.log(state.recipe);
};
