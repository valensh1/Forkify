var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _iconsSvg = require("url:../../img/icons.svg"); // When Parcel bundles our files it gets icons from the dist folder but our JavaScript is referencing files from our src-->img folders. This line of code here tells JavaScript to import our icons so it can read them from the dist folder. We use this icons variable throughout our markup variable below.
var _iconsSvgDefault = parcelHelpers.interopDefault(_iconsSvg);
var _fractional = require("fractional");
console.log(_iconsSvgDefault.default); // Prints http://localhost:1234/icons.d4a14980.svg which means it is importing the icons in and its the path to the new icons folder.
console.log(_fractional.Fraction);
class RecipeView {
    #parentElement = document.querySelector('.recipe');
    #data;
    render(data) {
        this.#data = data;
        const markup = this.#generateMarkup();
        this.#clear();
        this.#parentElement.insertAdjacentHTML('afterbegin', markup);
    }
     #clear() {
        this.#parentElement.innerHTML = '';
    }
    renderSpinner = ()=>{
        const markup = `\n            <div class="spinner">\n            <svg>\n              <use href="${_iconsSvgDefault.default}#icon-loader"></use>\n            </svg>\n          </div> \n        `;
        this.#parentElement.innerHTML = ''; // Clears the text of anything inside parent element passed into the function
        this.#parentElement.insertAdjacentHTML('afterbegin', markup); // Inserts markup variable into the parent element that was passed into the function
    };
     #generateMarkup() {
        return `\n        <figure class="recipe__fig">\n              <img src=${this.#data.image} alt=${this.#data.title} class="recipe__img" />\n              <h1 class="recipe__title">\n                <span>${this.#data.id}</span>\n              </h1>\n            </figure>\n\n            <div class="recipe__details">\n              <div class="recipe__info">\n                <svg class="recipe__info-icon">\n                  <use href="${_iconsSvgDefault.default}#icon-clock"></use>\n                </svg>\n                <span class="recipe__info-data recipe__info-data--minutes">${this.#data.cookingTime}</span>\n                <span class="recipe__info-text">minutes</span>\n              </div>\n              <div class="recipe__info">\n                <svg class="recipe__info-icon">\n                  <use href="${_iconsSvgDefault.default}#icon-users"></use>\n                </svg>\n                <span class="recipe__info-data recipe__info-data--people">${this.#data.servings}</span>\n                <span class="recipe__info-text">servings</span>\n\n                <div class="recipe__info-buttons">\n                  <button class="btn--tiny btn--increase-servings">\n                    <svg>\n                      <use href="${_iconsSvgDefault.default}#icon-minus-circle"></use>\n                    </svg>\n                  </button>\n                  <button class="btn--tiny btn--increase-servings">\n                    <svg>\n                      <use href="${_iconsSvgDefault.default}#icon-plus-circle"></use>\n                    </svg>\n                  </button>\n                </div>\n              </div>\n\n              <div class="recipe__user-generated">\n                <svg>\n                  <use href="${_iconsSvgDefault.default}#icon-user"></use>\n                </svg>\n              </div>\n              <button class="btn--round">\n                <svg class="">\n                  <use href="${_iconsSvgDefault.default}#icon-bookmark-fill"></use>\n                </svg>\n              </button>\n            </div>\n\n            <div class="recipe__ingredients">\n              <h2 class="heading--2">Recipe ingredients</h2>\n              <ul class="recipe__ingredient-list">\n              ${this.#data.ingredients.map((ingredient)=>{
            return `\n                  <li class="recipe__ingredient">\n                    <svg class="recipe__icon">\n                      <use href="${_iconsSvgDefault.default}#icon-check"></use>\n                    </svg>\n                    <div class="recipe__quantity">${new _fractional.Fraction(ingredient.quantity).toString()}</div>\n                    <div class="recipe__description">\n                      <span class="recipe__unit">${ingredient.unit}</span>\n                      ${ingredient.description}\n                    </div>\n                  </li>\n                `;
        }).join('')}\n            </div>\n\n            <div class="recipe__directions">\n              <h2 class="heading--2">How to cook it</h2>\n              <p class="recipe__directions-text">\n                This recipe was carefully designed and tested by\n                <span class="recipe__publisher">${this.#data.publisher}</span>. Please check out\n                directions at their website.\n              </p>\n              <a\n                class="btn--small recipe__btn"\n                href=${this.#data.sourceURL}\n                target="_blank"\n              >\n                <span>Directions</span>\n                <svg class="search__icon">\n                  <use href="${_iconsSvgDefault.default}#icon-arrow-right"></use>\n                </svg>\n              </a>\n            </div>\n    `;
    }
}
exports.default = new RecipeView();
