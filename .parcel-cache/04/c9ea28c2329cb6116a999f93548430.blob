var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
var _modelJs = require("./model.js");
var _recipeViewJs = require("./views/recipeView.js");
var _recipeViewJsDefault = parcelHelpers.interopDefault(_recipeViewJs);
// import 'core-js/stable';  // Polyfilling which is basically making sure some features work in older browsers; Pollyfills everything other than async/await
var _runtime = require("regenerator-runtime/runtime"); // Polyfilling which is basically making sure some features work in older browsers; Pollyfills async/await
const recipeContainer = document.querySelector('.recipe');
const timeout = function(s) {
    return new Promise(function(_, reject) {
        setTimeout(function() {
            reject(new Error(`Request took too long! Timeout after ${s} second`));
        }, s * 1000);
    });
};
// Jonas Recipe API Documentation - https://forkify-api.herokuapp.com/v2
// API Call
const controlRecipes = async ()=>{
    try {
        const id = window.location.hash.slice(1); // Creation of variable id that gets the hash tag id number out of a windows search bar.
        console.log(id);
        if (!id) return; // Guard clause saying if there is no id then just return. This is a modern way to use if else statement without having to put tons of lines of code within blocks
        renderSpinner(recipeContainer); // Invoke the renderSpinner function passing in the recipeContainer variable as an argument.
        // Loading Recipe
        await _modelJs.loadRecipe(id); // Calling the loadRecipe function and passing in the id from our model.js file. Since this is essentially an API/AJAX call and this returns a promise we need to await that promise.
        // Rendering Recipe
        _recipeViewJsDefault.default.render(_modelJs.state.recipe);
    } catch (error) {
        alert(error);
    }
};
[
    'hashchange',
    'load'
].forEach((ev)=>window.addEventListener(ev, controlRecipes)
); // Add event listener for any change to the hash symbol change in the search bar in Google Chrome; Load event add event listner for any loading of the page we want to run the showRecipe method.
 // window.addEventListener('hashchange', controlRecipes);
 // window.addEventListener('load', controlRecipes);
